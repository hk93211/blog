(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{98:function(t,a,s){"use strict";s.r(a);var e=s(0),n=function(t){var a,s,e,n,p,r,o,v,l=(e="post",n="浏览器渲染过程",p="何时触发",r="引起reflow回流",o="引起repaint重绘",v="优化reflow、repaint触发次数",(a={}).internal=s=void 0,a.contentType="markdown",a.slug="20181217-javascript回流和重绘",a.content=s,a.title="javascript回流和重绘",a.layout=e,a.markdownHeadings=[{text:"一. 什么是DOM",slug:"一--什么是dom",level:2},{text:n,slug:n,level:3},{text:"1. 构建DOM树",slug:"1--构建dom树",level:3},{text:"2. 构建CSSOM树",slug:"2--构建cssom树",level:3},{text:"3. 生成render树",slug:"3--生成render树",level:3},{text:"4. Layout 布局",slug:"4--layout-布局",level:3},{text:"5. Paint 绘制",slug:"5--paint-绘制",level:3},{text:"二. 回流和重绘",slug:"二--回流和重绘",level:2},{text:p,slug:p,level:3},{text:r,slug:r,level:3},{text:o,slug:o,level:3},{text:v,slug:v,level:3},{text:"DOMContentLoaded 和 load",slug:"domcontentloaded-和-load",level:3},{text:"CSS 资源阻塞渲染",slug:"css-资源阻塞渲染",level:3},{text:"JS 资源",slug:"js-资源",level:3},{text:"首屏优化Tips",slug:"首屏优化tips",level:3}],a.excerpt="<p>DOM: Document Object Model 文档对象模型</p>\n",a.createdAt=new Date(15450048e5),a.updatedAt=new Date(1569296745688),a.type=e,a.permalink="/posts/20181217-javascript回流和重绘.html",a.assets={},a.attributes=a,a.prevPost={title:"nodejs一些学习",permalink:"/posts/20181216-nodejs一些学习.html"},a.nextPost={title:"解构赋值",permalink:"/posts/20190214-解构赋值.html"},a),_=t.options.beforeCreate||[];t.options.beforeCreate=[function(){this.$page=l}].concat(_);["layout","transition"].forEach((function(a){var s=t.options.PageComponent;s&&(t.options[a]=s[a]),void 0===t.options[a]&&(t.options[a]=l[a])})),t.options.name="page-wrapper-"+l.slug.replace(/[^0-9a-z\-]/i,"-")},p=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("layout-manager",[s("h2",{attrs:{id:"一--什么是dom"}},[t._v("一. 什么是DOM")]),t._v(" "),s("p",[t._v("DOM: Document Object Model 文档对象模型")]),t._v(" "),s("p",[t._v("只有JavaScript才能调用DOM这个API吗?")]),t._v(" "),s("p",[t._v("答案是否")]),t._v(" "),s("p",[t._v("Python也可以访问DOM")]),t._v(" "),s("blockquote",[s("p",[t._v("PS: 实质上还存在CSSOM: CSS Object Model, 浏览器将CSS代码解析成树形的数据结构，与DOM是两个独立的数据结构")])]),t._v(" "),s("h3",{attrs:{id:"浏览器渲染过程"}},[t._v("浏览器渲染过程")]),t._v(" "),s("p",[t._v("讨论DOM操作成本，肯定要先了解该成本的来源，那么就离不开浏览器渲染")]),t._v(" "),s("ol",[s("li",[t._v("解析HTML，构建DOM树（这里遇到外链，此时会发起请求）")]),t._v(" "),s("li",[t._v("解析CSS，生成CSS规则树")]),t._v(" "),s("li",[t._v("合并DOM树和CSS规则，生成render树")]),t._v(" "),s("li",[t._v("布局render树（Layout/reflow），负责各元素尺寸、位置的计算")]),t._v(" "),s("li",[t._v("绘制render树（paint），绘制页面像素信息")]),t._v(" "),s("li",[t._v("浏览器会将各层的信息发送给GPU，GPU将各层合成（composite），显示在屏幕上")])]),t._v(" "),s("h3",{attrs:{id:"1--构建dom树"}},[t._v("1. 构建DOM树")]),t._v(" "),s("div",{pre:!0,attrs:{class:"saber-highlight","data-lang":"html"}},[s("pre",{pre:!0,attrs:{class:"saber-highlight-code language-html"}},[s("code",{pre:!0,attrs:{class:"language-html"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("head")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("viewport"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("content")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("width=device-width,initial-scale=1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("link")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("style.css"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("rel")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("stylesheet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("title")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("DOM tree"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("title")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("head")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Hello "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("DOM"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" World!"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("img")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("awesome-photo.jpg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])])])]),s("p",[t._v("无论是DOM还是CSSOM, 都要经过 Bytes -> characters -> tokens -> nodes -> objectmodel")]),t._v(" "),s("p",[t._v("DOM树构建过程: 当前节点的所有子节点都构建好后才会去构建当前节点的下一个 兄弟节点。")]),t._v(" "),s("h3",{attrs:{id:"2--构建cssom树"}},[t._v("2. 构建CSSOM树")]),t._v(" "),s("p",[t._v("上述也提到了CSSOM的构建过程，也是树的结构，在最终计算各个节点的样式时，浏览器都会先从该节点的普遍属性（比如body里设置的全局样式）开始，再去应用该节点的具体属性。还有要注意的是，每个浏览器都有自己默认的样式表，因此很多时候这棵CSSOM树只是对这张默认样式表的部分替换。")]),t._v(" "),s("h3",{attrs:{id:"3--生成render树"}},[t._v("3. 生成render树")]),t._v(" "),s("p",[t._v("DOM树和CSSOM树合并生成render树")]),t._v(" "),s("p",[t._v("简单描述这个过程：")]),t._v(" "),s("p",[t._v("DOM树从根节点开始遍历可见节点，这里之所以强调了“可见”，是因为如果遇到设置了类似 display:none;的不可见节点，在render过程中是会被跳过的（但 visibility:hidden;opacity:0这种仍旧占据空间的节点不会被跳过render），保存各个节点的样式信息及其余节点的从属关系。")]),t._v(" "),s("h3",{attrs:{id:"4--layout-布局"}},[t._v("4. Layout 布局")]),t._v(" "),s("p",[t._v("有了各个节点的样式信息和属性，但不知道各个节点的确切位置和大小，所以要通过布局将样式信息和属性转换为实际可视窗口的相对大小和位置。")]),t._v(" "),s("h3",{attrs:{id:"5--paint-绘制"}},[t._v("5. Paint 绘制")]),t._v(" "),s("p",[t._v("万事俱备，最后只要将确定好位置大小的各节点，通过GPU渲染到屏幕的实际像素。")]),t._v(" "),s("p",[t._v("Tips")]),t._v(" "),s("ul",[s("li",[t._v("在上述渲染过程中，前3点可能要多次执行，比如js脚本去操作dom、更改css样式时，浏览器又要重新构建DOM、CSSOM树，重新render，重新layout、paint；")]),t._v(" "),s("li",[t._v("Layout在Paint之前，因此每次Layout重新布局（reflow 回流）后都要重新出发Paint渲染，这时又要去消耗GPU；")]),t._v(" "),s("li",[t._v("Paint不一定会触发Layout，比如改个颜色改个背景；（repaint 重绘）")]),t._v(" "),s("li",[t._v("图片下载完也会重新出发Layout和Paint；")])]),t._v(" "),s("h2",{attrs:{id:"二--回流和重绘"}},[t._v("二. 回流和重绘")]),t._v(" "),s("h3",{attrs:{id:"何时触发"}},[t._v("何时触发")]),t._v(" "),s("p",[t._v("reflow(回流): 根据Render Tree布局(几何属性)，意味着元素的内容、结构、位置或尺寸发生了变化，需要"),s("strong",[t._v("重新计算样式和渲染树")]),t._v("；")]),t._v(" "),s("p",[t._v("repaint(重绘): 意味着元素发生的改变只影响了节点的一些样式（背景色，边框颜色，文字颜色等），只需要"),s("strong",[t._v("应用新样式绘制这个元素")]),t._v("就可以了；")]),t._v(" "),s("p",[t._v("所以reflow回流的成本开销要高于repaint重绘，一个节点的回流往往回导致子节点以及同级节点的回流")]),t._v(" "),s("p",[t._v("GoogleChromeLabs 里面有一个csstriggers，列出了各个CSS属性对浏览器执行Layout、Paint、Composite的影响。")]),t._v(" "),s("h3",{attrs:{id:"引起reflow回流"}},[t._v("引起reflow回流")]),t._v(" "),s("p",[t._v("现代浏览器会对回流做优化，它会等到足够数量的变化发生，再做一次批处理回流。")]),t._v(" "),s("ol",[s("li",[t._v("页面第一次渲染（初始化）")]),t._v(" "),s("li",[t._v("DOM树变化（如：增删节点）")]),t._v(" "),s("li",[t._v("Render树变化（如：padding改变）")]),t._v(" "),s("li",[t._v("浏览器窗口resize")]),t._v(" "),s("li",[t._v("获取元素的某些属性： 浏览器为了获得正确的值也会提前触发回流，这样就使得浏览器的优化失效了，这些属性包括offsetLeft、offsetTop、offsetWidth、offsetHeight、 scrollTop/Left/Width/Height、clientTop/Left/Width/Height、调用了getComputedStyle()或者IE的currentStyle")])]),t._v(" "),s("h3",{attrs:{id:"引起repaint重绘"}},[t._v("引起repaint重绘")]),t._v(" "),s("ol",[s("li",[t._v("reflow回流必定引起repaint重绘，重绘可以单独触发")]),t._v(" "),s("li",[t._v("背景色、颜色、字体改变（注意：字体大小发生变化时，会触发回流）")])]),t._v(" "),s("h3",{attrs:{id:"优化reflow、repaint触发次数"}},[t._v("优化reflow、repaint触发次数")]),t._v(" "),s("ul",[s("li",[t._v("避免逐个修改节点样式，尽量一次性修改")]),t._v(" "),s("li",[t._v("使用DocumentFragment将需要多次修改的DOM元素缓存，最后一次性append到真实DOM中渲染")]),t._v(" "),s("li",[t._v("可以将需要多次修改的DOM元素设置 display:none，操作完再显示。（因为隐藏元素不在render树内因此 修改隐藏元素不会触发回流重绘）")]),t._v(" "),s("li",[t._v("避免多次读取某些属性（见上）")]),t._v(" "),s("li",[t._v("将复杂的节点元素脱离文档流，降低回流成本")])]),t._v(" "),s("h3",{attrs:{id:"domcontentloaded-和-load"}},[t._v("DOMContentLoaded 和 load")]),t._v(" "),s("ul",[s("li",[t._v("DOMContentLoaded 事件触发时，仅当DOM加载完成，不包括样式表，图片...")]),t._v(" "),s("li",[t._v("load 事件触发时，页面上所有的DOM，样式表，脚本，图片都已加载完成")])]),t._v(" "),s("h3",{attrs:{id:"css-资源阻塞渲染"}},[t._v("CSS 资源阻塞渲染")]),t._v(" "),s("p",[t._v("构建Render树需要DOM和CSSOM，所以HTML和CSS都会阻塞渲染。所以需要让CSS尽早加载（如：放在头部），以缩短首次渲染的时间。")]),t._v(" "),s("h3",{attrs:{id:"js-资源"}},[t._v("JS 资源")]),t._v(" "),s("p",[t._v("阻塞浏览器的解析，也就是说发现一个外链脚本时，需等待脚本下载完成并执行后才会继续解析HTML。")]),t._v(" "),s("p",[t._v("这和之前文章提到的浏览器线程有关，浏览器中js引擎线程和渲染线程是互斥的，详见《从setTimeout-setInterval看JS线程》")]),t._v(" "),s("p",[t._v("普通的脚本会阻塞浏览器解析，加上defer或async属性，脚本就变成异步，可等到解析完毕再执行。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("async异步执行，异步下载完毕后就会执行，不确保执行顺序，一定在onload前，但不确定在DOMContentLoaded事件的前后")])]),t._v(" "),s("li",[s("p",[t._v("defer延迟执行，相对于放在body最后（理论上在DOMContentLoaded事件前）")])]),t._v(" "),s("li",[s("p",[t._v("浏览器拿到HTML后，从上到下顺序解析文档")])]),t._v(" "),s("li",[s("p",[t._v("此时遇到css、js外链，则同时发起请求")])]),t._v(" "),s("li",[s("p",[t._v("开始构建DOM树")])]),t._v(" "),s("li",[s("p",[t._v("这里要特别注意，由于有CSS资源，CSSOM还未构建前，会阻塞js（如果有的话）")])]),t._v(" "),s("li",[s("p",[t._v("无论JavaScript是内联还是外链，只要浏览器遇到 script 标记，唤醒 JavaScript解析器，就会进行暂- 停 blocked 浏览器解析HTML，并等到 CSSOM 构建完毕，才执行js脚本")])]),t._v(" "),s("li",[s("p",[t._v("渲染首屏（DOMContentLoaded 触发，其实不一定是首屏，可能在js脚本执行前DOM树和CSSOM已经构建完- render树，已经paint）")])])]),t._v(" "),s("h3",{attrs:{id:"首屏优化tips"}},[t._v("首屏优化Tips")]),t._v(" "),s("p",[t._v("说了这么多，其实可以总结几点浏览器首屏渲染优化的方向：")]),t._v(" "),s("p",[t._v("减少资源请求数量（内联亦或是延迟动态加载）\n使CSS样式表尽早加载，减少@import的使用，因为需要解析完样式表中所有import的资源才会算CSS资源下载完\n异步js：阻塞解析器的 JavaScript 会强制浏览器等待 CSSOM 并暂停 DOM 的构建，导致首次渲染的时间延迟")])])}),[],!1,null,null,null);"function"==typeof n&&n(p);a.default=p.exports}}]);