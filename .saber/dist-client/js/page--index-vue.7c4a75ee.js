(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{103:function(e,t,l){"use strict";l.r(t);var s=l(45),a={render:function(e){return e("layout-manager",{scopedSlots:{component:function(t){return e(s.a,{props:t})}}})}},n=l(0),u=function(e){var t,l,s,a,n,u,o,r,i,p,g,v,c,x,d,m,w,y,h,k,b,A,D,f,T,S,j,H,_,C,J,P,M,O,N,L,E,V,$,G,I,R,W,z,B,F,q,U,K,Q,Y,X,Z,ee,te,le,se,ae,ne,ue,oe,re,ie,pe,ge,ve,ce,xe,de,me,we=(l="post",s="markdown",a="背景",n="解决方法",u="webpack-dev-middleware",o="webpack-hot-middleware",r="参考",i="类型",g="page",v={},c={},x={},d={},m={},w="流中的是什么",y={},h="记录一些看过的而且答错了的面试题",k={},b={},A={},D="generate-json-webpack-plugin",f={},T="nginx在应用程序中的作用",S="正向代理与反向代理",j="正向代理",H="反向代理",_="nginx解决跨域的原理",C="请求过滤",J="配置gzip",P="负载均衡",M={},O={},N="记录稍微复杂一点的解构赋值",L={},E="浏览器渲染过程",V="何时触发",$="引起reflow回流",G="引起repaint重绘",I="优化reflow、repaint触发次数",R={},W="process",z={},B={},F={},q="eslint在项目中使用",U={},K="默认渲染行为的问题",Q="易变数据不能使用一个引用",Y={},X={},Z="git hook",ee={},te={},le={},se={},ae="对比methods",ne={},ue={},oe={},re={},ie={},pe="vinyl-fs",ge="vinyl-source-stream",ve="vinyl-buffer",ce={},xe="挑拣提交（cherry-pick）",de="要看在某个时间段内的commit",me="把当前代码提交到另一个远程git仓库",(p={}).internal=t=void 0,p.contentType="vue",p.slug="index",p.content=t,p.layout=g,p.injectAllPosts=!0,p.createdAt=new Date(NaN),p.updatedAt=new Date(1569316923516),p.type=g,p.permalink="/",p.assets={},p.attributes=p,p.posts=[v,c,x,d,m,y,k,b,A,f,M,O,L,R,z,B,F,U,Y,X,ee,te,le,se,ne,ue,oe,re,ie,ce],p.pagination={hasPrev:!0,hasNext:!1,total:2,current:1,prevLink:"/page/2",nextLink:t},v.internal=t,v.contentType=s,v.slug="20190920-Git-stash",v.content=t,v.title="Git-stash",v.layout=l,v.markdownHeadings=[{text:a,slug:a,level:2},{text:"作用",slug:"作用",level:2},{text:"使用",slug:"使用",level:2}],v.excerpt="<p>我们目前在做的项目, 采用的是快速迭代的方式, 开发和测试和用户测试和改bug并行, 经常要切分支.</p>\n",v.createdAt=new Date(15689376e5),v.updatedAt=new Date(1569233200550),v.type=l,v.permalink="/posts/20190920-Git-stash.html",v.assets={},v.attributes=v,c.internal=t,c.contentType=s,c.slug="20190823-Vue面试题",c.content=t,c.title="Vue面试题",c.layout=l,c.markdownHeadings=[{text:"1. SPA是什么, 优缺点是什么",slug:"1--spa是什么-优缺点是什么",level:2},{text:"2. v-show 和 v-if 有什么区别",slug:"2--v-show-和-v-if-有什么区别",level:2},{text:"3. Class 和 Style 如何动态绑定",slug:"3--class-和-style-如何动态绑定",level:2},{text:"4. 怎么理解 Vue 的单项数据流",slug:"4--怎么理解-vue-的单项数据流",level:2},{text:"5. computed 和 watch 的却别和适用场景",slug:"5--computed-和-watch-的却别和适用场景",level:2},{text:"6. 直接给一个数组赋值, Vue 能检测到变化吗",slug:"6--直接给一个数组赋值-vue-能检测到变化吗",level:2},{text:"7. Vue 的生命周期的理解",slug:"7--vue-的生命周期的理解",level:2},{text:"8. Vue 父组件和子组件生命周期钩子函数的执行顺序",slug:"8--vue-父组件和子组件生命周期钩子函数的执行顺序",level:2},{text:"9. 在哪个生命周期内调用异步请求 ? 为什么",slug:"9--在哪个生命周期内调用异步请求--为什么",level:2},{text:"10. 在哪个阶段前才能操作 DOM",slug:"10--在哪个阶段前才能操作-dom",level:2},{text:"11. 父组件可以监听子组件的生命周期吗",slug:"11--父组件可以监听子组件的生命周期吗",level:2},{text:"12. 谈谈你对 keep-alive 的了解",slug:"12--谈谈你对-keep-alive-的了解",level:2},{text:"13. 组件中的 data 为什么是一个对象",slug:"13--组件中的-data-为什么是一个对象",level:2},{text:"14. v-model 的原理",slug:"14--v-model-的原理",level:2},{text:"15. Vue 组件间有哪几种通信方式",slug:"15--vue-组件间有哪几种通信方式",level:2},{text:"16. 谈谈你对 Vuex 的理解",slug:"16--谈谈你对-vuex-的理解",level:2},{text:"17. 谈谈你对 Vue SSR 和 SSR 的理解",slug:"17--谈谈你对-vue-ssr-和-ssr-的理解",level:2},{text:"18. vue-router 路由有几种模式",slug:"18--vue-router-路由有几种模式",level:2},{text:"19. 谈谈 vue-router 中常用的 hash 和 history 路由模式实现原理",slug:"19--谈谈-vue-router-中常用的-hash-和-history-路由模式实现原理",level:2},{text:"20. 谈谈你对 MVVM 的理解",slug:"20--谈谈你对-mvvm-的理解",level:2}],c.excerpt="<p>SPA (single-page application) 单页面应用程序, 仅在 web 页面初始化的时候加载响应的HTML, JavaScript, CSS. 一旦页面加载完成, SPA 不会因为用户的操作而进行页面的重新加载或跳转, 取而代之的是利用路由机制实现 HTML 内容的变换, UI 与用户的交互, 避免页面的重新加载, 当然可以在 JS 代码中强制实现页面的重新加载.</p>\n",c.createdAt=new Date(15665184e5),c.updatedAt=new Date(1569315364167),c.type=l,c.permalink="/posts/20190823-Vue面试题.html",c.assets={},c.attributes=c,x.internal=t,x.contentType=s,x.slug="20190820-highlightjs在vue中使用的坑",x.content=t,x.title="highlightjs在vue中使用的坑",x.layout=l,x.markdownHeadings=[{text:"highlight.js",slug:"highlight-js",level:3},{text:n,slug:n,level:3}],x.excerpt="<p>之前在弄博客的代码高亮的时候, 使用的是highlight.js这个插件, 当时用的挺好</p>\n",x.createdAt=new Date(15662592e5),x.updatedAt=new Date(1569313095010),x.type=l,x.permalink="/posts/20190820-highlightjs在vue中使用的坑.html",x.assets={},x.attributes=x,d.internal=t,d.contentType=s,d.slug="20190812-vue首屏加载速度优化",d.content=t,d.title="vue首屏加载速度优化",d.layout=l,d.markdownHeadings=[{text:a,slug:a,level:2},{text:n,slug:n,level:2},{text:"1. vue-router路由懒加载",slug:"1--vue-router路由懒加载",level:3},{text:"2. 去除不必要的依赖(去除组件的全局引入)",slug:"2--去除不必要的依赖去除组件的全局引入",level:3},{text:"3. 手动引入模块库的方法",slug:"3--手动引入模块库的方法",level:3},{text:"4. 使用更轻量级的工具库",slug:"4--使用更轻量级的工具库",level:3},{text:"5. CDN优化",slug:"5--cdn优化",level:3},{text:"6. 检查 Nginx 是否开启 gzip",slug:"6--检查-nginx-是否开启-gzip",level:3}],d.excerpt="<p>后台管理型项目就是页面多, 当页面多的时候, 首屏加载的静态资源(css/js文件)就会很多, 我们项目就在被客户投诉说首页加载速度太慢, 遂排查是什么原因, 到底是前端的问题还是后台的问题(判断后台的问题可以参考我的另一片文章TTFB时间过长)</p>\n",d.createdAt=new Date(1565568e6),d.updatedAt=new Date(1569313013206),d.type=l,d.permalink="/posts/20190812-vue首屏加载速度优化.html",d.assets={},d.attributes=d,m.internal=t,m.contentType=s,m.slug="20190725-Nodejs的Stream",m.content=t,m.title="Nodejs的Stream",m.layout=l,m.markdownHeadings=[{text:"流",slug:"流",level:2},{text:w,slug:w,level:2},{text:"可读流",slug:"可读流",level:2},{text:"参数",slug:"参数",level:3},{text:"方法",slug:"方法",level:3}],m.excerpt="流是一组有序的，有起点和终点的字节数据传输手段。",m.createdAt=new Date(15640128e5),m.updatedAt=new Date(1569312393731),m.type=l,m.permalink="/posts/20190725-Nodejs的Stream.html",m.assets={},m.attributes=m,y.internal=t,y.contentType=s,y.slug="20190603-面试题",y.content=t,y.title="面试题",y.layout=l,y.markdownHeadings=[{text:h,slug:h,level:2}],y.excerpt="<p>注意 diameter 的值是一个常规函数，但是 perimeter 的值是一个箭头函数。</p>\n",y.createdAt=new Date(155952e7),y.updatedAt=new Date(1569312039935),y.type=l,y.permalink="/posts/20190603-面试题.html",y.assets={},y.attributes=y,k.internal=t,k.contentType=s,k.slug="20190514-Express结合webpack实现HMR",k.content=t,k.title="Express结合webpack实现HMR",k.layout=l,k.markdownHeadings=[{text:"webpack dev server",slug:"webpack-dev-server",level:2},{text:u,slug:u,level:2},{text:o,slug:o,level:2},{text:"HMR",slug:"hmr",level:2},{text:"webpack 配置",slug:"webpack-配置",level:2},{text:"Express 中的配置",slug:"express-中的配置",level:2}],k.excerpt="<p>Webpack dev server 是一个轻量的node.js express服务器，实现了 webpack 编译代码实时输出更新。在前后端分离的前端项目开发中经常用到。</p>\n",k.createdAt=new Date(1557792e6),k.updatedAt=new Date(1569311682612),k.type=l,k.permalink="/posts/20190514-Express结合webpack实现HMR.html",k.assets={},k.attributes=k,b.internal=t,b.contentType=s,b.slug="20190513-http和https",b.content=t,b.title="http和https",b.layout=l,b.markdownHeadings=[{text:"前言",slug:"前言",level:2},{text:"HTTP是什么",slug:"http是什么",level:2},{text:"HTTPS是什么",slug:"https是什么",level:2},{text:"HTTP协议存在的哪些问题",slug:"http协议存在的哪些问题",level:2},{text:"HTTPS如何解决HTTP上述问题",slug:"https如何解决http上述问题",level:2},{text:"HTTPS工作流程",slug:"https工作流程",level:2},{text:"HTTP 和 HTTPS 的区别",slug:"http-和-https-的区别",level:2},{text:"为何不所有的网站都使用HTTPS",slug:"为何不所有的网站都使用https",level:2},{text:"HTTP百科",slug:"http百科",level:2}],b.excerpt="<p>最近, 个人博客想加上小绿锁, 也就是安全连接的标识, 但是自己的http相关知识太匮乏了, 所以想去了解一下 http 的相关知识</p>\n",b.createdAt=new Date(15577056e5),b.updatedAt=new Date(1569311566165),b.type=l,b.permalink="/posts/20190513-http和https.html",b.assets={},b.attributes=b,A.internal=t,A.contentType=s,A.slug="20190509-webpack的plugin",A.content=t,A.title="webpack的plugin",A.layout=l,A.markdownHeadings=[{text:D,slug:D,level:2},{text:u,slug:u,level:2},{text:"特性：",slug:"特性：",level:3},{text:o,slug:o,level:2}],A.excerpt="<p>最近在接触一个新的vue项目的时候, 发现项目初始化的时候回去请求一个json配置文件,但是我在开发本地目录找不到对应的 json 配置, 只有几个内容相似的 js 文件, 遂想是否是 webpack 将 js 文件转换成了 json 文件了, 就去看 webpack 配置文件, 发现一个叫 generate-json-webpack-plugin 的插件:</p>\n",A.createdAt=new Date(155736e7),A.updatedAt=new Date(1569311316203),A.type=l,A.permalink="/posts/20190509-webpack的plugin.html",A.assets={},A.attributes=A,f.internal=t,f.contentType=s,f.slug="20190419-nginx基础知识",f.content=t,f.title="nginx基础知识",f.layout=l,f.markdownHeadings=[{text:T,slug:T,level:2},{text:S,slug:S,level:2},{text:j,slug:j,level:2},{text:H,slug:H,level:2},{text:_,slug:_,level:3},{text:C,slug:C,level:2},{text:J,slug:J,level:2},{text:P,slug:P,level:2},{text:r,slug:r,level:2}],f.excerpt="解决跨域",f.createdAt=new Date(1555632e6),f.updatedAt=new Date(1569304763736),f.type=l,f.permalink="/posts/20190419-nginx基础知识.html",f.assets={},f.attributes=f,M.internal=t,M.contentType=s,M.slug="20190221-TTFB时间过长",M.content=t,M.title="TTFB时间过长",M.layout=l,M.markdownHeadings=[{text:a,slug:a,level:2},{text:"什么是 Waiting (TTFB) 时间",slug:"什么是-waiting-ttfb-时间",level:2},{text:"TTFB 时间多长算长？",slug:"ttfb-时间多长算长？",level:2},{text:"TTFB 过长的原因",slug:"ttfb-过长的原因",level:2},{text:"Waiting (TTFB) 时间过长的解决办法",slug:"waiting-ttfb-时间过长的解决办法",level:2},{text:r,slug:r,level:2}],M.excerpt="<p>最近项目中的某个页面的加载时间过长, 从第一个接口开始到最后一个接口调用结束一共用了 5.5s ~ 6s.</p>\n",M.createdAt=new Date(15507072e5),M.updatedAt=new Date(1569297253004),M.type=l,M.permalink="/posts/20190221-TTFB时间过长.html",M.assets={},M.attributes=M,O.internal=t,O.contentType=s,O.slug="20190214-解构赋值",O.content=t,O.title="解构赋值",O.layout=l,O.markdownHeadings=[{text:N,slug:N,level:2}],O.excerpt="<p>上面代码有三次解构赋值，分别是对loc、start、line三个属性的解构赋值。注意，最后一次对line属性的解构赋值之中，只有line是变量，loc和start都是模式，不是变量。</p>\n",O.createdAt=new Date(15501024e5),O.updatedAt=new Date(1569297098620),O.type=l,O.permalink="/posts/20190214-解构赋值.html",O.assets={},O.attributes=O,L.internal=t,L.contentType=s,L.slug="20181217-javascript回流和重绘",L.content=t,L.title="javascript回流和重绘",L.layout=l,L.markdownHeadings=[{text:"一. 什么是DOM",slug:"一--什么是dom",level:2},{text:E,slug:E,level:3},{text:"1. 构建DOM树",slug:"1--构建dom树",level:3},{text:"2. 构建CSSOM树",slug:"2--构建cssom树",level:3},{text:"3. 生成render树",slug:"3--生成render树",level:3},{text:"4. Layout 布局",slug:"4--layout-布局",level:3},{text:"5. Paint 绘制",slug:"5--paint-绘制",level:3},{text:"二. 回流和重绘",slug:"二--回流和重绘",level:2},{text:V,slug:V,level:3},{text:$,slug:$,level:3},{text:G,slug:G,level:3},{text:I,slug:I,level:3},{text:"DOMContentLoaded 和 load",slug:"domcontentloaded-和-load",level:3},{text:"CSS 资源阻塞渲染",slug:"css-资源阻塞渲染",level:3},{text:"JS 资源",slug:"js-资源",level:3},{text:"首屏优化Tips",slug:"首屏优化tips",level:3}],L.excerpt="<p>DOM: Document Object Model 文档对象模型</p>\n",L.createdAt=new Date(15450048e5),L.updatedAt=new Date(1569296745688),L.type=l,L.permalink="/posts/20181217-javascript回流和重绘.html",L.assets={},L.attributes=L,R.internal=t,R.contentType=s,R.slug="20181216-nodejs一些学习",R.content=t,R.title="nodejs一些学习",R.layout=l,R.markdownHeadings=[{text:W,slug:W,level:2},{text:"path",slug:"path",level:2}],R.createdAt=new Date(15449184e5),R.updatedAt=new Date(1569296436327),R.type=l,R.permalink="/posts/20181216-nodejs一些学习.html",R.assets={},R.attributes=R,z.internal=t,z.contentType=s,z.slug="20181128-this",z.content=t,z.title="this",z.layout=l,z.markdownHeadings=[{text:"一. 全局执行",slug:"一--全局执行",level:2},{text:"二. 函数中执行",slug:"二--函数中执行",level:2},{text:"三. 作为对象的方法调用",slug:"三--作为对象的方法调用",level:2},{text:"四. 作为构造函数使用",slug:"四--作为构造函数使用",level:2},{text:"五. 在定时器中使用",slug:"五--在定时器中使用",level:2},{text:"六. 箭头函数",slug:"六--箭头函数",level:2},{text:"七. call, apply, bind",slug:"七--call-apply-bind",level:2},{text:"应用: 改变this的指向",slug:"应用-改变this的指向",level:3}],z.excerpt="非严格模式中",z.createdAt=new Date(15433632e5),z.updatedAt=new Date(1569296308155),z.type=l,z.permalink="/posts/20181128-this.html",z.assets={},z.attributes=z,B.internal=t,B.contentType=s,B.slug="20181111-vue-router",B.content=t,B.title="vue-router",B.layout=l,B.markdownHeadings=[{text:"一. 单页应用",slug:"一--单页应用",level:2},{text:"二. 安装",slug:"二--安装",level:2},{text:"三. 创建路由相关文件",slug:"三--创建路由相关文件",level:2},{text:"四. 路由的一些参数配置",slug:"四--路由的一些参数配置",level:2},{text:"mode(路由的模式)",slug:"mode路由的模式",level:3},{text:"base",slug:"base",level:3},{text:"linkActiveClass",slug:"linkactiveclass",level:3},{text:"linkExactActiveClass",slug:"linkexactactiveclass",level:3},{text:"scrollBehavior",slug:"scrollbehavior",level:3},{text:"parseQuery",slug:"parsequery",level:3},{text:"stringifyQuery",slug:"stringifyquery",level:3},{text:"fallback:",slug:"fallback",level:3},{text:"五. 路由命名",slug:"五--路由命名",level:2},{text:"六. 路由参数",slug:"六--路由参数",level:2},{text:"七. 路由动画",slug:"七--路由动画",level:2},{text:"八. 路由传参",slug:"八--路由传参",level:2},{text:"九. 命名视图",slug:"九--命名视图",level:2},{text:"十. 导航守卫",slug:"十--导航守卫",level:2}],B.excerpt="<p>以前我们的网页应用都是输入一个url, 前端会请求后台, 后台返回一个新的html文件, 让前端进行渲染, 现在很多单页应用在浏览器地址栏输入url后, 都是不经过后台的, 仅仅是前端的javascript去处理路由的跳转, 那么我们就需要一个称职合理的路由工具来帮我们完成前端路由跳转的一些相关的工作, 那么现在前端框架都会配备自己的路由处理工具, 像vue 使用的是vue-router, react 使用的是react-router, angularjs 使用的是ng-router和ui-router, 还有不跟框架耦合的工具有 history 等等</p>\n",B.createdAt=new Date(15418944e5),B.updatedAt=new Date(1569295670219),B.type=l,B.permalink="/posts/20181111-vue-router.html",B.assets={},B.attributes=B,F.internal=t,F.contentType=s,F.slug="20181028-eslint",F.content=t,F.title="eslint",F.layout=l,F.markdownHeadings=[{text:q,slug:q,level:2},{text:"修复命令",slug:"修复命令",level:3},{text:"git commit 钩子插件: husky",slug:"git-commit-钩子插件-husky",level:2},{text:"git commit message插件: commitline",slug:"git-commit-message插件-commitline",level:2}],F.excerpt="<p>eslint 可以给我们的代码定义一些语法规范, 防止我们在语法上犯一些低级的错误, 格式上的问题, 团队协作时大家都使用统一的代码风格去书写, 让我们在看别人的代码时更方便.</p>\n",F.createdAt=new Date(15406848e5),F.updatedAt=new Date(1569295132249),F.type=l,F.permalink="/posts/20181028-eslint.html",F.assets={},F.attributes=F,U.internal=t,U.contentType=s,U.slug="20180927-无状态组件的最佳写法",U.content=t,U.title="无状态组件的最佳写法",U.layout=l,U.markdownHeadings=[{text:K,slug:K,level:2},{text:Q,slug:Q,level:2},{text:"结束语",slug:"结束语",level:2}],U.excerpt="<p>在React Component的生命周期中，有一个shouldComponentUpdate方法。这个方法默认返回值是true。</p>\n",U.createdAt=new Date(15380064e5),U.updatedAt=new Date(1569294821728),U.type=l,U.permalink="/posts/20180927-无状态组件的最佳写法.html",U.assets={},U.attributes=U,Y.internal=t,Y.contentType=s,Y.slug="20180925-dva",Y.content=t,Y.title="dva",Y.layout=l,Y.markdownHeadings=[{text:"笔记",slug:"笔记",level:2}],Y.excerpt="<p>只有在 router.js 定义使用的 component 对应的 component 才能从组件的 props 中提取到 history 属性</p>\n",Y.createdAt=new Date(15378336e5),Y.updatedAt=new Date(1569294709475),Y.type=l,Y.permalink="/posts/20180925-dva.html",Y.assets={},Y.attributes=Y,X.internal=t,X.contentType=s,X.slug="20180925-git hook",X.content=t,X.title=Z,X.layout=l,X.markdownHeadings=[{text:Z,slug:"git-hook",level:2}],X.excerpt="<p>有时候, 在使用git提交代码的时候, 需要先用语法检查工具来检查项目中是否有不符合规范的语法, 如果有, 就不能提交代码</p>\n",X.createdAt=new Date(15378336e5),X.updatedAt=new Date(1569294653245),X.type=l,X.permalink="/posts/20180925-git hook.html",X.assets={},X.attributes=X,ee.internal=t,ee.contentType=s,ee.slug="20180917-封装",ee.content=t,ee.title="封装",ee.layout=l,ee.markdownHeadings=[{text:"创建一个类",slug:"创建一个类",level:2}],ee.excerpt="<p>平常我们说的一些对象的公有属性,私有属性,公有方法,私有方法,特权方法,静态属性,静态方法这么多的名词到底是什么</p>\n",ee.createdAt=new Date(15371424e5),ee.updatedAt=new Date(1569294616658),ee.type=l,ee.permalink="/posts/20180917-封装.html",ee.assets={},ee.attributes=ee,te.internal=t,te.contentType=s,te.slug="20180911-redux-saga",te.content=t,te.title="redux-saga",te.layout=l,te.markdownHeadings=[{text:"概述",slug:"概述",level:2},{text:"名词解释",slug:"名词解释",level:2},{text:"Effect",slug:"effect",level:3},{text:"Task",slug:"task",level:3},{text:"阻塞调用 和 非阻塞调用",slug:"阻塞调用-和-非阻塞调用",level:3},{text:"watcher 和 worker",slug:"watcher-和-worker",level:3},{text:"api",slug:"api",level:3}],te.excerpt="<p>redux-saga是一个用于管理redux应用异步操作的中间件，redux-saga通过创建sagas将所有异步操作逻辑收集在一个地方集中处理，可以用来代替redux-thunk中间件</p>\n",te.createdAt=new Date(1536624e6),te.updatedAt=new Date(1569294489023),te.type=l,te.permalink="/posts/20180911-redux-saga.html",te.assets={},te.attributes=te,le.internal=t,le.contentType=s,le.slug="20180825-webpack自定义配置",le.content=t,le.title="webpack自定义配置",le.layout=l,le.markdownHeadings=[{text:"四个核心概念:",slug:"四个核心概念",level:2}],le.excerpt="<p><strong>webpack.config.js</strong></p>\n",le.createdAt=new Date(15351552e5),le.updatedAt=new Date(1569293880281),le.type=l,le.permalink="/posts/20180825-webpack自定义配置.html",le.assets={},le.attributes=le,se.internal=t,se.contentType=s,se.slug="20180824-vue-computed",se.content=t,se.title="vue-computed",se.layout=l,se.markdownHeadings=[{text:"什么是computed 计算属性",slug:"什么是computed-计算属性",level:2},{text:"用法",slug:"用法",level:2},{text:ae,slug:ae,level:2}],se.excerpt="<p>所有的计算属性都以函数的形式写在 Vue 实例内的 computed选项内，最终返回计算后的结果, 用于减少模板中的代码臃肿</p>\n",se.createdAt=new Date(15350688e5),se.updatedAt=new Date(1569292755949),se.type=l,se.permalink="/posts/20180824-vue-computed.html",se.assets={},se.attributes=se,ne.internal=t,ne.contentType=s,ne.slug="20180824-vue-directive",ne.content=t,ne.title="vue-directive",ne.layout=l,ne.markdownHeadings=[{text:"简介",slug:"简介",level:2},{text:"钩子函数",slug:"钩子函数",level:2},{text:"钩子函数参数",slug:"钩子函数参数",level:2}],ne.excerpt="<p>在 Vue2.0 中，代码复用和抽象的主要形式是组件。然而，有的情况下，你仍然需要对普通 DOM 元素进行底层操作，这时候就会用到自定义指令。</p>\n",ne.createdAt=new Date(15350688e5),ne.updatedAt=new Date(1569292926261),ne.type=l,ne.permalink="/posts/20180824-vue-directive.html",ne.assets={},ne.attributes=ne,ue.internal=t,ue.contentType=s,ue.slug="20180824-vue-mixin",ue.content=t,ue.title="vue-mixin",ue.layout=l,ue.markdownHeadings=[{text:"选项合并",slug:"选项合并",level:2},{text:"全局混入",slug:"全局混入",level:2}],ue.excerpt="<p>当组件和混入对象含有同名选项时，这些选项将以恰当的方式混合。</p>\n",ue.createdAt=new Date(15350688e5),ue.updatedAt=new Date(1569293440721),ue.type=l,ue.permalink="/posts/20180824-vue-mixin.html",ue.assets={},ue.attributes=ue,oe.internal=t,oe.contentType=s,oe.slug="20180823-vue入门",oe.content=t,oe.title="vue入门",oe.layout=l,oe.markdownHeadings=[{text:"1. vue实例",slug:"1--vue实例",level:2},{text:"1.1 vue实例的创建和作用",slug:"1-1-vue实例的创建和作用",level:3},{text:"1.2 vue实例的属性",slug:"1-2-vue实例的属性",level:3},{text:"1.3 vue实例的方法",slug:"1-3-vue实例的方法",level:3},{text:"2. vue的生命周期",slug:"2--vue的生命周期",level:2},{text:"3. vue的属性",slug:"3--vue的属性",level:2},{text:"4. vue的指令",slug:"4--vue的指令",level:2},{text:"4.1 原生指令:",slug:"4-1-原生指令",level:3},{text:"5. vue插槽",slug:"5--vue插槽",level:2},{text:"5.1 普通插槽",slug:"5-1-普通插槽",level:3},{text:"5.2 具名插槽",slug:"5-2-具名插槽",level:3},{text:"5.3 作用域插槽",slug:"5-3-作用域插槽",level:3},{text:"6. vue修饰符",slug:"6--vue修饰符",level:2},{text:"7. 自定义组件的v-model",slug:"7--自定义组件的v-model",level:2}],oe.excerpt="beforeCreate",oe.createdAt=new Date(15349824e5),oe.updatedAt=new Date(1569228204145),oe.type=l,oe.permalink="/posts/20180823-vue入门.html",oe.assets={},oe.attributes=oe,re.internal=t,re.contentType=s,re.slug="20180822-JavaScript的module简史",re.content=t,re.title="JavaScript的module简史",re.layout=l,re.markdownHeadings=[{text:"JavaScript模块化",slug:"javascript模块化",level:2},{text:"命名空间模式",slug:"命名空间模式",level:3},{text:"依赖注入",slug:"依赖注入",level:3},{text:"CommonJS",slug:"commonjs",level:3},{text:"AMD",slug:"amd",level:3},{text:"UMD",slug:"umd",level:3},{text:"ES2015 Modules",slug:"es2015-modules",level:3}],re.excerpt="<p>最开始,JavaScript 往往作为嵌入到 HTML 页面中的用于控制动画与简单的用户交互的脚本语言，我们习惯于将其直接嵌入到 script 标签中：</p>\n",re.createdAt=new Date(1534896e6),re.updatedAt=new Date(1569163298419),re.type=l,re.permalink="/posts/20180822-JavaScript的module简史.html",re.assets={},re.attributes=re,ie.internal=t,ie.contentType=s,ie.slug="20180821-Gulp的Stream",ie.content=t,ie.title="Gulp的Stream",ie.layout=l,ie.markdownHeadings=[{text:"Stream",slug:"stream",level:2},{text:"pipe",slug:"pipe",level:2},{text:"内存操作",slug:"内存操作",level:2},{text:"事件",slug:"事件",level:2},{text:i,slug:i,level:2},{text:"例子",slug:"例子",level:2},{text:"Vinyl文件系统",slug:"vinyl文件系统",level:2},{text:"Vinyl的意义",slug:"vinyl的意义",level:3},{text:pe,slug:pe,level:3},{text:i,slug:"类型-2",level:3},{text:"Stream转换",slug:"stream转换",level:2},{text:ge,slug:ge,level:3},{text:ve,slug:ve,level:3},{text:"Gulp错误处理",slug:"gulp错误处理",level:3},{text:"解答",slug:"解答",level:2}],ie.excerpt="<p>你可能也在最初开始使用Gulp的时候就听说过：Gulp是一个有关 <em>Stream</em>（数据流）的构建系统。这句话的意思是:</p>\n",ie.createdAt=new Date(15348096e5),ie.updatedAt=new Date(1569162992673),ie.type=l,ie.permalink="/posts/20180821-Gulp的Stream.html",ie.assets={},ie.attributes=ie,ce.internal=t,ce.contentType=s,ce.slug="20180820-git一些命令",ce.content=t,ce.title="git的一些命令",ce.layout=l,ce.markdownHeadings=[{text:"Git diff",slug:"git-diff",level:2},{text:"恢复暂存区",slug:"恢复暂存区",level:2},{text:"Git reset",slug:"git-reset",level:2},{text:"Git stash",slug:"git-stash",level:2},{text:"历史记录",slug:"历史记录",level:2},{text:"修复错误提交",slug:"修复错误提交",level:2},{text:xe,slug:xe,level:2},{text:"将log 输出成工整好看的形式",slug:"将log-输出成工整好看的形式",level:2},{text:de,slug:de,level:2},{text:me,slug:me,level:2}],ce.excerpt="<p>通常情况下，我们会在自己的独立分支中完成需求开发，此时就会有需求将自己的分支和其他分支进行对比。这个功能可以通过</p>\n",ce.createdAt=new Date(15347232e5),ce.updatedAt=new Date(1569161446350),ce.type=l,ce.permalink="/posts/20180820-git一些命令.html",ce.assets={},ce.attributes=ce,p),ye=e.options.beforeCreate||[];e.options.beforeCreate=[function(){this.$page=we}].concat(ye);["layout","transition"].forEach((function(t){var l=e.options.PageComponent;l&&(e.options[t]=l[t]),void 0===e.options[t]&&(e.options[t]=we[t])})),e.options.name="page-wrapper-"+we.slug.replace(/[^0-9a-z\-]/i,"-")},o=Object(n.a)(a,void 0,void 0,!1,null,null,null);"function"==typeof u&&u(o);t.default=o.exports},105:function(e,t,l){"use strict";l.r(t);var s=l(45),a={render:function(e){return e("layout-manager",{scopedSlots:{component:function(t){return e(s.a,{props:t})}}})}},n=l(0),u=function(e){var t,l,s,a,n,u,o,r,i,p,g,v,c,x,d,m,w,y,h,k,b,A,D,f,T,S,j,H,_,C,J,P,M,O,N,L,E,V,$,G,I,R,W,z,B,F,q,U,K,Q,Y,X,Z,ee,te,le,se,ae=(l="post",s="markdown",a="基本用法",u="page",o={},r="维护阶段",i="带来的沉思",p="基本行为的抽象",g="常用功能的封装",v="不用职责和功能组件的组合",c="通过事件机制完成模块间的数据通信和交流",x="业务组件的复用",d={},m="三大原则",w={},y="Netlify",h={},k={},b={},A="洗洗睡吧",D={},f="基本概念",T="三者的异同",S="应用场景",j="安全性的考虑",H={},_={},C="在我们开始之前",J="转换的思想",P="wepback它的目标是是什么？",M="webpack较之其他类似工具有什么不同？",O="webpack为什么要将所有资源放在一个文件里面？",N="开启wbpack之旅",L="安装webpack",E="webpak命令行常见使用的操作",V="webpack的用法",$="举个栗子",G={},I={},R={},W="let和const命令",z="let命令",B="不存在变量提升",F="不允许重复声明",q="块级作用域与函数声明",U="顶层对象的属性",K={},Q={},Y={},X={},Z="安装包的方式安装",ee="环境变量的概念",te="事件驱动和非阻塞",le={},se={},(n={}).internal=t=void 0,n.contentType="vue",n.slug="index",n.content=t,n.layout=u,n.injectAllPosts=!0,n.createdAt=new Date(NaN),n.updatedAt=new Date(1569316923516),n.type=u,n.permalink="/page/2",n.assets={},n.attributes=n,n.posts=[o,d,w,h,k,b,D,H,_,G,I,R,K,Q,Y,X,le,se],n.pagination={hasPrev:!1,hasNext:!0,total:2,current:2,prevLink:"/page/3",nextLink:"/"},o.internal=t,o.contentType=s,o.slug="20180819-AngularJS复杂业务系统的代码架构探索",o.content=t,o.title="AngularJS复杂业务系统的代码架构探索",o.layout=l,o.markdownHeadings=[{text:'模型系统的前世 -- "模糊系统"',slug:"模型系统的前世----quot模糊系统quot",level:2},{text:"开发阶段: controller里面的代码",slug:"开发阶段-controller里面的代码",level:3},{text:r,slug:r,level:3},{text:i,slug:i,level:3},{text:"模型系统的初现 -- 面向对象程序设计",slug:"模型系统的初现----面向对象程序设计",level:2},{text:"面向对象程序设计的手段(方法)是什么 ?",slug:"面向对象程序设计的手段方法是什么-",level:3},{text:p,slug:p,level:3},{text:g,slug:g,level:3},{text:v,slug:v,level:3},{text:c,slug:c,level:3},{text:x,slug:x,level:3}],o.excerpt="初始化视图模型, 视图展示元素的文字及显示影藏等等属性(ng-show/ng-if)",o.createdAt=new Date(15346368e5),o.updatedAt=new Date(1569160345028),o.type=l,o.permalink="/posts/20180819-AngularJS复杂业务系统的代码架构探索.html",o.assets={},o.attributes=o,d.internal=t,d.contentType=s,d.slug="20180819-redux入门",d.content=t,d.title="redux入门",d.layout=l,d.markdownHeadings=[{text:"Redux是什么",slug:"redux是什么",level:2},{text:"Redux的优点",slug:"redux的优点",level:2},{text:"Redux的核心概念",slug:"redux的核心概念",level:2},{text:"1. action",slug:"1--action",level:3},{text:"2. reducers",slug:"2--reducers",level:3},{text:"3. store",slug:"3--store",level:3},{text:m,slug:m,level:2}],d.excerpt="<p>Redux对于JavaScript应用而言是一个可预测状态的容器。换言之，它是一个应用数据流框架，而不是传统的像underscore.js或者AngularJs那样的库或者框架。</p>\n",d.createdAt=new Date(15346368e5),d.updatedAt=new Date(1568972458654),d.type=l,d.permalink="/posts/20180819-redux入门.html",d.assets={},d.attributes=d,w.internal=t,w.contentType=s,w.slug="20180815-netlify简介",w.content=t,w.title=y,w.layout=l,w.markdownHeadings=[{text:y,slug:"netlify",level:3},{text:"快速在Netlify建立Jekyll、Hexo、Hugo静态博客",slug:"快速在netlify建立jekyll、hexo、hugo静态博客",level:3}],w.excerpt="<p>Netlify优秀的静态博客托管平台-自动编译部署生成Web网站可绑域名支持SSL.</p>\n",w.createdAt=new Date(15342912e5),w.updatedAt=new Date(1568884126418),w.type=l,w.permalink="/posts/20180815-netlify简介.html",w.assets={},w.attributes=w,h.internal=t,h.contentType=s,h.slug="20180717-react之setState的坑",h.content=t,h.title="react之setState的坑",h.layout=l,h.markdownHeadings=[{text:"setState",slug:"setstate",level:2},{text:"setState多次,re-render一次",slug:"setstate多次re-render一次",level:2},{text:"总结.",slug:"总结-",level:2}],h.excerpt="<p>今天发现有很多文章在说setState的坑,吐槽之声也不少.其实我就碰到过一个 setState不会立即改变数据:</p>\n",h.createdAt=new Date(15317856e5),h.updatedAt=new Date(1568883948623),h.type=l,h.permalink="/posts/20180717-react之setState的坑.html",h.assets={},h.attributes=h,k.internal=t,k.contentType=s,k.slug="20180130-Object对象",k.content=t,k.title="Object对象",k.layout=l,k.markdownHeadings=[{text:"描述",slug:"描述",level:2},{text:"属性",slug:"属性",level:2},{text:"方法",slug:"方法",level:2},{text:"Object方法",slug:"object方法",level:2}],k.excerpt="<p>几乎所有的 JavaScript 对象都是 Object 的实例；一个典型的对象继承了Object.prototype的属性（包括方法），尽管这些属性可能被遮蔽（也被称为覆盖）。然而，一个Object可能是故意创建的，这是不确定的（例如通过Object.create(null)），或者它可能被改变，所以这不再是准确的（例如Object.setPrototypeOf）。</p>\n",k.createdAt=new Date(15172704e5),k.updatedAt=new Date(1568883775412),k.type=l,k.permalink="/posts/20180130-Object对象.html",k.assets={},k.attributes=k,b.internal=t,b.contentType=s,b.slug="20170817-async和await",b.content=t,b.title="async和await",b.layout=l,b.markdownHeadings=[{text:"一. async和await在干什么",slug:"一--async和await在干什么",level:2},{text:"二. async起什么作用",slug:"二--async起什么作用",level:2},{text:"三. await 到底在等啥",slug:"三--await-到底在等啥",level:2},{text:"四. await 等到了要等的，然后呢",slug:"四--await-等到了要等的，然后呢",level:2},{text:"五. async/await 帮我们干了啥",slug:"五--asyncawait-帮我们干了啥",level:2},{text:"六. async/await 的优势在于处理 then链",slug:"六--asyncawait-的优势在于处理-then链",level:2},{text:A,slug:A,level:2}],b.excerpt="<p>任意一个名称都是有意义的，先从字面意思来理解。async 是“异步”的简写，而 await 可以认为是 async wait 的简写。所以应该很好理解 async 用于申明一个 function 是异步的，而 await 用于等待一个异步方法执行完成。</p>\n",b.createdAt=new Date(1502928e6),b.updatedAt=new Date(1568883267900),b.type=l,b.permalink="/posts/20170817-async和await.html",b.assets={},b.attributes=b,D.internal=t,D.contentType=s,D.slug="20170527-cookie、localStorage、sessionStorage区别",D.content=t,D.title="cookie、localStorage、sessionStorage区别",D.layout=l,D.markdownHeadings=[{text:f,slug:f,level:2},{text:"Cookie",slug:"cookie",level:3},{text:"localStorage",slug:"localstorage",level:3},{text:"sessionStorage",slug:"sessionstorage",level:3},{text:T,slug:T,level:3},{text:S,slug:S,level:3},{text:j,slug:j,level:3}],D.excerpt="<p>Cookie 是小甜饼的意思。顾名思义，cookie 确实非常小，它的大小限制为4KB左右，是网景公司的前雇员 Lou Montulli 在1993年3月的发明。它的主要用途有保存登录信息，比如你登录某个网站市场可以看到“记住密码”，这通常就是通过在 Cookie 中存入一段辨别用户身份的数据来实现的。</p>\n",D.createdAt=new Date(14958432e5),D.updatedAt=new Date(1568883291834),D.type=l,D.permalink="/posts/20170527-cookie、localStorage、sessionStorage区别.html",D.assets={},D.attributes=D,H.internal=t,H.contentType=s,H.slug="20170513-vue-cli的webpack模板配置目录分析",H.content=t,H.title="vue-cli的webpack模板配置目录分析",H.layout=l,H.markdownHeadings=[{text:"一. 文件结构",slug:"一--文件结构",level:2},{text:"二. 指令分析",slug:"二--指令分析",level:2},{text:"三. build文件夹分析",slug:"三--build文件夹分析",level:2},{text:"四. config文件夹分析",slug:"四--config文件夹分析",level:2},{text:"五. 总结",slug:"五--总结",level:2}],H.excerpt="<p>首先看package.json里面的scripts字段，</p>\n",H.createdAt=new Date(14946336e5),H.updatedAt=new Date(1568873347637),H.type=l,H.permalink="/posts/20170513-vue-cli的webpack模板配置目录分析.html",H.assets={},H.attributes=H,_.internal=t,_.contentType=s,_.slug="20170513-webpack学习之路",_.content=t,_.title="webpack学习之路",_.layout=l,_.markdownHeadings=[{text:C,slug:C,level:3},{text:J,slug:J,level:3},{text:P,slug:P,level:3},{text:M,slug:M,level:3},{text:O,slug:O,level:3},{text:N,slug:N,level:2},{text:L,slug:L,level:3},{text:E,slug:E,level:3},{text:V,slug:V,level:2},{text:$,slug:$,level:3},{text:"最后",slug:"最后",level:2}],_.excerpt="<p>当自己在学习webpack的时候，在网上发现中文的很详细的教程很少，于是便想将自己学习webpack的笔记记录整理下来，便有了这篇文章，希望对大家有所帮助，如果有错误，欢迎大家指出。</p>\n",_.createdAt=new Date(14946336e5),_.updatedAt=new Date(1568880176020),_.type=l,_.permalink="/posts/20170513-webpack学习之路.html",_.assets={},_.attributes=_,G.internal=t,G.contentType=s,G.slug="20170424-canvas和svg",G.content=t,G.title="canvas和svg",G.layout=l,G.markdownHeadings=[{text:"Canvas",slug:"canvas",level:2},{text:"Svg",slug:"svg",level:2}],G.excerpt="基于像素",G.createdAt=new Date(1492992e6),G.updatedAt=new Date(1568872547387),G.type=l,G.permalink="/posts/20170424-canvas和svg.html",G.assets={},G.attributes=G,I.internal=t,I.contentType=s,I.slug="20170322-H5规范",I.content=t,I.title="H5规范",I.layout=l,I.markdownHeadings=[{text:"一. 新的DOCTYPE和字符集",slug:"一--新的doctype和字符集",level:2},{text:"二. 新增语义化标签",slug:"二--新增语义化标签",level:2},{text:"三. Canvas API 和 SVG",slug:"三--canvas-api-和-svg",level:2},{text:"四. audio和video标签",slug:"四--audio和video标签",level:2},{text:"五. 地理定位API",slug:"五--地理定位api",level:2},{text:"六. 跨文档消息通信和XHR Level 2",slug:"六--跨文档消息通信和xhr-level-2",level:2},{text:"七. Forms API",slug:"七--forms-api",level:2},{text:"八. 拖放",slug:"八--拖放",level:2},{text:"九. Web Worker API",slug:"九--web-worker-api",level:2},{text:"十. Web Storage API",slug:"十--web-storage-api",level:2}],I.excerpt="<p>H5: <!DOCTYPE HTML></p>\n",I.createdAt=new Date(14901408e5),I.updatedAt=new Date(1568872455182),I.type=l,I.permalink="/posts/20170322-H5规范.html",I.assets={},I.attributes=I,R.internal=t,R.contentType=s,R.slug="20170317-let和const",R.content=t,R.title="let和const",R.layout=l,R.markdownHeadings=[{text:W,slug:W,level:1},{text:z,slug:z,level:2},{text:a,slug:a,level:3},{text:B,slug:B,level:3},{text:"暂时性死区 (temporal dead zone，简称 TDZ)",slug:"暂时性死区-temporal-dead-zone，简称-tdz",level:3},{text:F,slug:F,level:3},{text:"块级作用域",slug:"块级作用域",level:3},{text:"ES6 的块级作用域",slug:"es6-的块级作用域",level:3},{text:q,slug:q,level:3},{text:"do 表达式",slug:"do-表达式",level:3},{text:"const 命令",slug:"const-命令",level:2},{text:a,slug:"基本用法-2",level:3},{text:"本质",slug:"本质",level:3},{text:"ES6 声明变量的六种方法",slug:"es6-声明变量的六种方法",level:3},{text:U,slug:U,level:2},{text:"global 对象",slug:"global-对象",level:2}],R.excerpt="<p>let 和 const 的新特性:</p>\n",R.createdAt=new Date(14897088e5),R.updatedAt=new Date(1568871928519),R.type=l,R.permalink="/posts/20170317-let和const.html",R.assets={},R.attributes=R,K.internal=t,K.contentType=s,K.slug="20170311-axios",K.content=t,K.title="axios",K.layout=l,K.markdownHeadings=[{text:"一.安装",slug:"一-安装",level:2},{text:"二.例子",slug:"二-例子",level:2},{text:"三.axios 的 API",slug:"三-axios-的-api",level:2},{text:"四.请求的配置 (request config)",slug:"四-请求的配置-request-config",level:2},{text:"五.请求返回的内容",slug:"五-请求返回的内容",level:2},{text:"六.默认配置",slug:"六-默认配置",level:2},{text:"七.拦截器",slug:"七-拦截器",level:2},{text:"八.错误处理",slug:"八-错误处理",level:2},{text:"九.取消",slug:"九-取消",level:2}],K.excerpt="<p>1.1、利用npm安装</p>\n",K.createdAt=new Date(14891904e5),K.updatedAt=new Date(1568861476766),K.type=l,K.permalink="/posts/20170311-axios.html",K.assets={},K.attributes=K,Q.internal=t,Q.contentType=s,Q.slug="20160830-AngularJS",Q.content=t,Q.title="AngularJS",Q.layout=l,Q.markdownHeadings=[{text:"Angularjs是什么",slug:"angularjs是什么",level:2},{text:"Angularjs的核心特性",slug:"angularjs的核心特性",level:2},{text:"AngularJS的优点",slug:"angularjs的优点",level:2},{text:"AngularJS的缺点",slug:"angularjs的缺点",level:2},{text:"包括AngularJS",slug:"包括angularjs",level:3},{text:"指向AngularJS应用程序",slug:"指向angularjs应用程序",level:3},{text:"视图",slug:"视图",level:3},{text:"控制器",slug:"控制器",level:3},{text:"AngularJS 控制器",slug:"angularjs-控制器",level:2},{text:"AngularJS 过滤器",slug:"angularjs-过滤器",level:2},{text:"AngularJS HTML DOM",slug:"angularjs-html-dom",level:2},{text:"AngularJS 模块",slug:"angularjs-模块",level:2},{text:"应用模块",slug:"应用模块",level:3},{text:"控制器模块",slug:"控制器模块",level:3}],Q.excerpt="<p>AngularJS是一个功能强大的基于JavaScript开发框架用于创建富互联网应用(RIA)。</p>\n",Q.createdAt=new Date(14725152e5),Q.updatedAt=new Date(1568856495560),Q.type=l,Q.permalink="/posts/20160830-AngularJS.html",Q.assets={},Q.attributes=Q,Y.internal=t,Y.contentType=s,Y.slug="20160412-nodejs事件驱动编程理解",Y.content=t,Y.title="nodejs事件驱动编程理解",Y.layout=l,Y.markdownHeadings=[{text:"理解Node.js事件驱动编程",slug:"理解node-js事件驱动编程",level:2},{text:"Node.Js是基于javascript语言，建构在google V8 engine以及Linux上的一个非阻塞事件驱动IO框架。nodejs是单进程单线程，但是基于V8的强大驱动力，以及事件驱动模型，nodejs的性能非常高，而且想达到多核或者多进程也不是很难（现在已经有大量的第三方module来实现这个功能）。",slug:"node-js是基于javascript语言，建构在google-v8-engine以及linux上的一个非阻塞事件驱动io框架。nodejs是单进程单线程，但是基于v8的强大驱动力，以及事件驱动模型，nodejs的性能非常高，而且想达到多核或者多进程也不是很难（现在已经有大量的第三方module来实现这个功能）。",level:4},{text:"医生看病",slug:"医生看病",level:3},{text:"快餐店点餐",slug:"快餐店点餐",level:3},{text:"Node.Js做了什么工作呢",slug:"node-js做了什么工作呢",level:3}],Y.excerpt="<p>Node.js现在非常活跃，相关生态社区已经超过Lua（基本上比较知名的功能都有nodejs模块实现）。</p>\n",Y.createdAt=new Date(14604192e5),Y.updatedAt=new Date(1568855942172),Y.type=l,Y.permalink="/posts/20160412-nodejs事件驱动编程理解.html",Y.assets={},Y.attributes=Y,X.internal=t,X.contentType=s,X.slug="20160315-node基础",X.content=t,X.title="node基础",X.layout=l,X.markdownHeadings=[{text:"Node服务器端开发第一天",slug:"node服务器端开发第一天",level:1},{text:"Node简介",slug:"node简介",level:2},{text:"客户端的JavaScript是怎样的",slug:"客户端的javascript是怎样的",level:3},{text:"什么是Node",slug:"什么是node",level:3},{text:"为什么是JavaScript",slug:"为什么是javascript",level:3},{text:"Node的实现结构",slug:"node的实现结构",level:3},{text:"Node在当下Web开发领域的应用",slug:"node在当下web开发领域的应用",level:3},{text:"哪些公司在用",slug:"哪些公司在用",level:3},{text:"重点理解",slug:"重点理解",level:3},{text:"环境配置",slug:"环境配置",level:2},{text:Z,slug:Z,level:3},{text:"更新版本",slug:"更新版本",level:3},{text:"NVM工具的使用",slug:"nvm工具的使用",level:3},{text:"配置Python环境",slug:"配置python环境",level:3},{text:ee,slug:ee,level:3},{text:"Windows下常用的命令行操作",slug:"windows下常用的命令行操作",level:3},{text:te,slug:te,level:2},{text:"模块化开发",slug:"模块化开发",level:2}],X.excerpt="<p>Node简介及配置、快速上手、核心特点、模块化</p>\n",X.createdAt=new Date(1458e9),X.updatedAt=new Date(1568819914635),X.type=l,X.permalink="/posts/20160315-node基础.html",X.assets={},X.attributes=X,le.internal=t,le.contentType=s,le.slug="20151023-markdown语法学习",le.content=t,le.title="markdown语法学习",le.layout=l,le.markdownHeadings=[{text:"0.编辑器",slug:"0-编辑器",level:2},{text:"1.标题",slug:"1-标题",level:2},{text:"2. 粗体",slug:"2--粗体",level:2},{text:"3. 斜体",slug:"3--斜体",level:2},{text:"4. 无序列表",slug:"4--无序列表",level:2},{text:"5. 有序列表",slug:"5--有序列表",level:2},{text:"6. 链接",slug:"6--链接",level:2},{text:"7. 图片",slug:"7--图片",level:2},{text:"8. 引用框",slug:"8--引用框",level:2},{text:"9. 代码",slug:"9--代码",level:2},{text:"10. 脚注",slug:"10--脚注",level:2},{text:"11. 分割线",slug:"11--分割线",level:2}],le.excerpt="<p>Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。 Markdown的语法简洁明了、学习容易，而且功能比纯文本更强，因此有很多人用它写博客。 ——百度百科</p>\n",le.createdAt=new Date(14455584e5),le.updatedAt=new Date(1568816616842),le.type=l,le.permalink="/posts/20151023-markdown语法学习.html",le.assets={},le.attributes=le,se.internal=t,se.contentType=s,se.slug="20150623-Hello World",se.content=t,se.title="Hello World",se.layout=l,se.markdownHeadings=[{text:"Quick Start",slug:"quick-start",level:2},{text:"Run server",slug:"run-server",level:2},{text:"Generate static files",slug:"generate-static-files",level:2},{text:"Deploy to remote sites",slug:"deploy-to-remote-sites",level:2}],se.excerpt="<p>Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.</p>\n",se.createdAt=new Date(14350176e5),se.updatedAt=new Date(1568817006578),se.type=l,se.permalink="/posts/20150623-Hello World.html",se.assets={},se.attributes=se,n),ne=e.options.beforeCreate||[];e.options.beforeCreate=[function(){this.$page=ae}].concat(ne);["layout","transition"].forEach((function(t){var l=e.options.PageComponent;l&&(e.options[t]=l[t]),void 0===e.options[t]&&(e.options[t]=ae[t])})),e.options.name="page-wrapper-"+ae.slug.replace(/[^0-9a-z\-]/i,"-")},o=Object(n.a)(a,void 0,void 0,!1,null,null,null);"function"==typeof u&&u(o);t.default=o.exports},45:function(e,t,l){"use strict";var s=l(0),a=Object(s.a)({},(function(){var e=this.$createElement;this._self._c;return this._m(0)}),[function(){var e=this.$createElement,t=this._self._c||e;return t("div",[t("h2",{staticClass:"hr"},[t("span",[this._v("About Me")])]),this._v(" "),t("p",[this._v("My name is Kwin Huang (黄鹍). I was born in 1992 and I'd been coding since my 19. I used JavaScript, Python, Java. Now I focus on JavaScript and currently work at "),t("b",[this._v("Midea")]),this._v(" Inc")])])}],!1,null,null,null).exports;function n(e){return(e||"").substring(0,8).replace(/^(\d{4})(\d{2})(\d{2})$/g,"$1-$2-$3")}var u={props:{posts:Array,pagination:Object},computed:{postsList:function(){return this.posts.sort((function(e,t){var l=e.slug.substring(0,8),s=t.slug.substring(0,8);return new Date(n(s))-new Date(n(l))}))}},methods:{getCreatedDate:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t=e.substring(0,8);return t.replace(/^(\d{4})(\d{2})(\d{2})$/g,"$1-$2-$3")}}},o={data:function(){return{skillList:["Fundamental HTML/CSS/ECMAScript(5/6/7)","AngularJs","Vue.js","Webpack","Git","Npm Yarn","Nodejs","HTTP Protocol"]}}},r={data:function(){return{contactList:[{name:"@黄鹍",type:"zhihu",href:"https://www.zhihu.com/people/KwinHuang/activities"},{name:"@hk93211",type:"github",href:"https://github.com/hk93211"},{name:"@hk93211",type:"medium",href:"https://medium.com/@hk93211"},{name:"@hk93211",type:"email",href:"mailto:hk93211@gmail.com"},{name:"@hk93211",type:"telegram",href:"https://t.me/hk93211"}]}}},i={components:{About:a,Posts:Object(s.a)(u,(function(){var e=this,t=e.$createElement,l=e._self._c||t;return l("div",[e._m(0),e._v(" "),l("ul",{staticClass:"post-link non-style-list"},e._l(e.postsList,(function(t){return l("li",{key:t.permalink,staticClass:"post-list-item"},[l("a",{attrs:{href:t.permalink}},[e._v(e._s(t.title))]),e._v(" "),l("span",{staticClass:"post-list-date"},[e._v("("+e._s(e.getCreatedDate(t.slug))+")")])])})),0),e._v(" "),l("div",{staticClass:"pagination"},[e.pagination.hasPrev?l("a",{attrs:{href:e.pagination.prevLink}},[e._v("更多文章...")]):e._e(),e._v(" "),e.pagination.hasNext?l("a",{attrs:{href:e.pagination.nextLink}},[e._v("返回")]):e._e()])])}),[function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{staticClass:"hr"},[t("span",[this._v("Posts")])])}],!1,null,null,null).exports,Skill:Object(s.a)(o,(function(){var e=this,t=e.$createElement,l=e._self._c||t;return l("div",[e._m(0),e._v(" "),l("ul",{staticClass:"skill-list non-style-list"},e._l(e.skillList,(function(t){return l("li",{key:t,staticClass:"post-list-item"},[e._v("\n      "+e._s(t)+"\n    ")])})),0)])}),[function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{staticClass:"hr"},[t("span",[this._v("Skills")])])}],!1,null,null,null).exports,Contact:Object(s.a)(r,(function(){var e=this,t=e.$createElement,l=e._self._c||t;return l("div",[e._m(0),e._v(" "),l("ul",{staticClass:"contact-list non-style-list"},e._l(e.contactList,(function(t){return l("li",{key:t.type,staticClass:"post-list-item"},[l("b",{class:t.type},[e._v(e._s(t.type.toUpperCase()))]),e._v("\n      :\n      "),l("a",{attrs:{href:t.href}},[e._v(e._s(t.name))])])})),0)])}),[function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{staticClass:"hr"},[t("span",[this._v("Contact")])])}],!1,null,null,null).exports},props:["page"],mounted:function(){console.log(this.page)}},p=Object(s.a)(i,(function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"container"},[t("About"),this._v(" "),t("Posts",{attrs:{posts:this.page.posts,pagination:this.page.pagination}}),this._v(" "),t("Skill"),this._v(" "),t("Contact")],1)}),[],!1,null,null,null);t.a=p.exports}}]);