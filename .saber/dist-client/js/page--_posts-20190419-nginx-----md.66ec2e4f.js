(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{51:function(t,s,a){t.exports=a.p+"images/proxy.78b8cea5.jpeg"},92:function(t,s,a){"use strict";a.r(s);var e=a(0),n=function(t){var s,a,e,n,r,p,v,_,o,c,l,u=(e="post",n="nginx在应用程序中的作用",r="正向代理与反向代理",p="正向代理",v="反向代理",_="nginx解决跨域的原理",o="请求过滤",c="配置gzip",l="负载均衡",(s={}).internal=a=void 0,s.contentType="markdown",s.slug="20190419-nginx基础知识",s.content=a,s.title="nginx基础知识",s.layout=e,s.markdownHeadings=[{text:n,slug:n,level:2},{text:r,slug:r,level:2},{text:p,slug:p,level:2},{text:v,slug:v,level:2},{text:_,slug:_,level:3},{text:o,slug:o,level:2},{text:c,slug:c,level:2},{text:l,slug:l,level:2},{text:"参考",slug:"参考",level:2}],s.excerpt="解决跨域",s.createdAt=new Date(1555632e6),s.updatedAt=new Date(1569304763736),s.type=e,s.permalink="/posts/20190419-nginx基础知识.html",s.assets={},s.attributes=s,s.prevPost={title:"TTFB时间过长",permalink:"/posts/20190221-TTFB时间过长.html"},s.nextPost={title:"webpack的plugin",permalink:"/posts/20190509-webpack的plugin.html"},s),i=t.options.beforeCreate||[];t.options.beforeCreate=[function(){this.$page=u}].concat(i);["layout","transition"].forEach((function(s){var a=t.options.PageComponent;a&&(t.options[s]=a[s]),void 0===t.options[s]&&(t.options[s]=u[s])})),t.options.name="page-wrapper-"+u.slug.replace(/[^0-9a-z\-]/i,"-")},r=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("layout-manager",[e("h2",{attrs:{id:"nginx在应用程序中的作用"}},[t._v("nginx在应用程序中的作用")]),t._v(" "),e("ul",[e("li",[t._v("解决跨域")]),t._v(" "),e("li",[t._v("请求过滤")]),t._v(" "),e("li",[t._v("配置gzip")]),t._v(" "),e("li",[t._v("负载均衡")]),t._v(" "),e("li",[t._v("静态资源服务器")])]),t._v(" "),e("p",[t._v("首先先来了解一下一些基础知识， nginx是一个高性能的反向代理服务器那么什么是反向代理呢？")]),t._v(" "),e("h2",{attrs:{id:"正向代理与反向代理"}},[t._v("正向代理与反向代理")]),t._v(" "),e("p",[t._v("代理是在服务器和客户端之间假设的一层服务器，代理将接收客户端的请求并将它转发给服务器，然后将服务端的响应转发给客户端。")]),t._v(" "),e("p",[t._v("不管是正向代理还是反向代理，实现的都是上面的功能。")]),t._v(" "),e("img",{staticStyle:{width:"600px"},attrs:{src:a(51)}}),t._v(" "),e("h2",{attrs:{id:"正向代理"}},[t._v("正向代理")]),t._v(" "),e("p",[t._v("正向代理，意思是一个位于客户端和原始服务器(origin server)之间的服务器，为了从原始服务器取得内容，客户端向代理发送一个请求并指定目标(原始服务器)，然后代理向原始服务器转交请求并将获得的内容返回给客户端。")]),t._v(" "),e("p",[t._v("正向代理是为我们服务的，即为客户端服务的，客户端可以根据正向代理访问到它本身无法访问到的服务器资源。")]),t._v(" "),e("p",[t._v("正向代理对我们是透明的，对服务端是非透明的，即服务端并不知道自己收到的是来自代理的访问还是来自真实客户端的访问。")]),t._v(" "),e("h2",{attrs:{id:"反向代理"}},[t._v("反向代理")]),t._v(" "),e("p",[t._v("反向代理（Reverse Proxy）方式是指以代理服务器来接受internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给internet上请求连接的客户端，此时代理服务器对外就表现为一个反向代理服务器。")]),t._v(" "),e("p",[t._v("反向代理是为服务端服务的，反向代理可以帮助服务器接收来自客户端的请求，帮助服务器做请求转发，负载均衡等。")]),t._v(" "),e("p",[t._v("反向代理对服务端是透明的，对我们是非透明的，即我们并不知道自己访问的是代理服务器，而服务器知道反向代理在为他服务。")]),t._v(" "),e("div",{pre:!0,attrs:{class:"saber-highlight","data-lang":"js"}},[e("pre",{pre:!0,attrs:{class:"saber-highlight-code language-js"}},[e("code",{pre:!0,attrs:{class:"language-js"}},[t._v("events "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nhttp\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    server\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        location path\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        location path\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n     "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    server\n\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])])]),e("ul",[e("li",[e("p",[e("em",[t._v("main")]),t._v("：nginx的全局配置，对全局生效。")])]),t._v(" "),e("li",[e("p",[e("em",[t._v("events")]),t._v("：配置影响nginx服务器或与用户的网络连接。")])]),t._v(" "),e("li",[e("p",[e("em",[t._v("http")]),t._v("：可以嵌套多个server，配置代理，缓存，日志定义等绝大多数功能和第三方模块的配置。")])]),t._v(" "),e("li",[e("p",[e("em",[t._v("server")]),t._v("：配置虚拟主机的相关参数，一个http中可以有多个server。")])]),t._v(" "),e("li",[e("p",[e("em",[t._v("location")]),t._v("：配置请求的路由，以及各种页面的处理情况。")])]),t._v(" "),e("li",[e("p",[e("em",[t._v("upstream")]),t._v("：配置后端服务器具体地址，负载均衡配置不可或缺的部分。")])])]),t._v(" "),e("p",[t._v("内置变量\n下面是 nginx一些配置中常用的内置全局变量，你可以在配置的任何位置使用它们。")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("变量名")]),t._v(" "),e("th",[t._v("功能")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("$host")]),t._v(" "),e("td",[t._v("请求信息中的 Host，如果请求中没有 Host行，则等于设置的服务器名")])]),t._v(" "),e("tr",[e("td",[t._v("$request_method")]),t._v(" "),e("td",[t._v("客户端请求类型，如 GET、 POST")])]),t._v(" "),e("tr",[e("td",[t._v("$remote_addr")]),t._v(" "),e("td",[t._v("客户端的 IP地址")])]),t._v(" "),e("tr",[e("td",[t._v("$args")]),t._v(" "),e("td",[t._v("请求中的参数")])]),t._v(" "),e("tr",[e("td",[t._v("$content_length")]),t._v(" "),e("td",[t._v("请求头中的 Content-length字段")])]),t._v(" "),e("tr",[e("td",[t._v("$http_user_agent")]),t._v(" "),e("td",[t._v("客户端agent信息")])]),t._v(" "),e("tr",[e("td",[t._v("$http_cookie")]),t._v(" "),e("td",[t._v("客户端cookie信息")])]),t._v(" "),e("tr",[e("td",[t._v("$remote_addr")]),t._v(" "),e("td",[t._v("客户端的IP地址")])]),t._v(" "),e("tr",[e("td",[t._v("$remote_port")]),t._v(" "),e("td",[t._v("客户端的端口")])]),t._v(" "),e("tr",[e("td",[t._v("$server_protocol")]),t._v(" "),e("td",[t._v("请求使用的协议，如 HTTP/1.0、·HTTP/1.1`")])]),t._v(" "),e("tr",[e("td",[t._v("$server_addr")]),t._v(" "),e("td",[t._v("服务器地址")])]),t._v(" "),e("tr",[e("td",[t._v("$server_name")]),t._v(" "),e("td",[t._v("服务器名称")])]),t._v(" "),e("tr",[e("td",[t._v("$server_port")]),t._v(" "),e("td",[t._v("服务器的端口号")])])])]),t._v(" "),e("h3",{attrs:{id:"nginx解决跨域的原理"}},[t._v("nginx解决跨域的原理")]),t._v(" "),e("p",[t._v("例如：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("前端server的域名为："),e("code",{pre:!0},[t._v("fe.server.com")])])]),t._v(" "),e("li",[e("p",[t._v("后端服务的域名为："),e("code",{pre:!0},[t._v("dev.server.com")])])])]),t._v(" "),e("p",[t._v("现在我在 "),e("code",{pre:!0},[t._v("fe.server.com")]),t._v(" 对 "),e("code",{pre:!0},[t._v("dev.server.com")]),t._v(" 发起请求一定会出现跨域。")]),t._v(" "),e("p",[t._v("现在我们只需要启动一个nginx服务器，将 server_name设置为 "),e("code",{pre:!0},[t._v("fe.server.com")]),t._v(",然后设置相应的location以拦截前端需要跨域的请求，最后将请求代理回 "),e("code",{pre:!0},[t._v("dev.server.com")]),t._v("。如下面的配置：")]),t._v(" "),e("div",{pre:!0,attrs:{class:"saber-highlight","data-lang":"js"}},[e("pre",{pre:!0,attrs:{class:"saber-highlight-code language-js"}},[e("code",{pre:!0,attrs:{class:"language-js"}},[t._v("server "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        listen       "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        server_name  fe"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("server"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        location "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            proxy_pass dev"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("server"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])])]),e("p",[t._v("这样可以完美绕过浏览器的同源策略： "),e("code",{pre:!0},[t._v("fe.server.com")]),t._v(" 访问 nginx 的 "),e("code",{pre:!0},[t._v("fe.server.com")]),t._v(" 属于同源访问，而 nginx对服务端转发的请求不会触发浏览器的同源策略。")]),t._v(" "),e("h2",{attrs:{id:"请求过滤"}},[t._v("请求过滤")]),t._v(" "),e("p",[t._v("根据状态码过滤")]),t._v(" "),e("div",{pre:!0,attrs:{class:"saber-highlight","data-lang":"js"}},[e("pre",{pre:!0,attrs:{class:"saber-highlight-code language-js"}},[e("code",{pre:!0,attrs:{class:"language-js"}},[t._v("error_page   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("501")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("502")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("503")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("504")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("506")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    location "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        #将跟路径改编为存放html的路径。\n        root   "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("root"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("html"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])])]),e("p",[t._v("根据URL名称过滤，精准匹配URL，不匹配的URL全部重定向到主页。")]),t._v(" "),e("div",{pre:!0,attrs:{class:"saber-highlight","data-lang":"js"}},[e("pre",{pre:!0,attrs:{class:"saber-highlight-code language-js"}},[e("code",{pre:!0,attrs:{class:"language-js"}},[t._v("location "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    rewrite  "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("$ "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("index"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html  redirect"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])])]),e("p",[t._v("根据请求类型过滤。")]),t._v(" "),e("div",{pre:!0,attrs:{class:"saber-highlight","data-lang":"js"}},[e("pre",{pre:!0,attrs:{class:"saber-highlight-code language-js"}},[e("code",{pre:!0,attrs:{class:"language-js"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" $request_method "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GET")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("POST")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HEAD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("$ "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        \n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("403")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])])]),e("h2",{attrs:{id:"配置gzip"}},[t._v("配置gzip")]),t._v(" "),e("h2",{attrs:{id:"负载均衡"}},[t._v("负载均衡")]),t._v(" "),e("p",[t._v("什么是负载均衡")]),t._v(" "),e("p",[t._v("打个比方, 车站排队买票, 有很多个窗口, 每个窗口都排这很多人在等着买票, 人们会自己判断走到人少的队伍后面排着等着买票, 但是机器不会将来的人分到哪一个队伍下面去排队, 下面有很多用户需要服务，我们需要一个工具或策略来帮助我们将如此多的用户分配到每个窗口，来达到资源的充分利用以及更少的排队时间。")]),t._v(" "),e("p",[t._v("把前面的服务窗口想像成我们的后端服务器，而后面终端的人则是无数个客户端正在发起请求。负载均衡就是用来帮助我们将众多的客户端请求合理的分配到各个服务器，以达到服务端资源的充分利用和更少的请求时间。")]),t._v(" "),e("p",[t._v("nginx如何实现负载均衡\nUpstream指定后端服务器地址列表:")]),t._v(" "),e("div",{pre:!0,attrs:{class:"saber-highlight","data-lang":"js"}},[e("pre",{pre:!0,attrs:{class:"saber-highlight-code language-js"}},[e("code",{pre:!0,attrs:{class:"language-js"}},[t._v("upstream balanceServer "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    server "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.1")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v(".22")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v(".33")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("12345")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    server "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.1")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v(".22")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v(".34")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("12345")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    server "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.1")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v(".22")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v(".35")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("12345")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    server "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.1")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v(".22")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v(".36")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("12345")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    server "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.1")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v(".22")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v(".37")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("12345")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])])]),e("p",[t._v("在server中拦截响应请求，并将请求转发到Upstream中配置的服务器列表。")]),t._v(" "),e("div",{pre:!0,attrs:{class:"saber-highlight","data-lang":"js"}},[e("pre",{pre:!0,attrs:{class:"saber-highlight-code language-js"}},[e("code",{pre:!0,attrs:{class:"language-js"}},[t._v("server "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      server_name  fe"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("server"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      listen "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n      location "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("api "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          proxy_pass http"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//balanceServer;")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])])]),e("p",[t._v("上面的配置只是指定了nginx需要转发的服务端列表，并没有指定分配策略。")]),t._v(" "),e("h2",{attrs:{id:"参考"}},[t._v("参考")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://mp.weixin.qq.com/s/BA_JZ_kMBFZBE7jjQDNc1Q",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端开发者必备的 Nginx 知识")])])])}),[],!1,null,null,null);"function"==typeof n&&n(r);s.default=r.exports}}]);