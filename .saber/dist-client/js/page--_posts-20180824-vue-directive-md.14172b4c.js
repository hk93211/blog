(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{86:function(t,a,s){"use strict";s.r(a);var n=s(0),e=function(t){var a,s,n,e,p,r=(n="post",e="钩子函数",p="钩子函数参数",(a={}).internal=s=void 0,a.contentType="markdown",a.slug="20180824-vue-directive",a.content=s,a.title="vue-directive",a.layout=n,a.markdownHeadings=[{text:"简介",slug:"简介",level:2},{text:e,slug:e,level:2},{text:p,slug:p,level:2}],a.excerpt="<p>在 Vue2.0 中，代码复用和抽象的主要形式是组件。然而，有的情况下，你仍然需要对普通 DOM 元素进行底层操作，这时候就会用到自定义指令。</p>\n",a.createdAt=new Date(15350688e5),a.updatedAt=new Date(1569292926261),a.type=n,a.permalink="/posts/20180824-vue-directive.html",a.assets={},a.attributes=a,a.prevPost={title:"vue-mixin",permalink:"/posts/20180824-vue-mixin.html"},a.nextPost={title:"vue-computed",permalink:"/posts/20180824-vue-computed.html"},a),o=t.options.beforeCreate||[];t.options.beforeCreate=[function(){this.$page=r}].concat(o);["layout","transition"].forEach((function(a){var s=t.options.PageComponent;s&&(t.options[a]=s[a]),void 0===t.options[a]&&(t.options[a]=r[a])})),t.options.name="page-wrapper-"+r.slug.replace(/[^0-9a-z\-]/i,"-")},p=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("layout-manager",[s("h2",{attrs:{id:"简介"}},[t._v("简介")]),t._v(" "),s("p",[t._v("在 Vue2.0 中，代码复用和抽象的主要形式是组件。然而，有的情况下，你仍然需要对普通 DOM 元素进行底层操作，这时候就会用到自定义指令。")]),t._v(" "),s("p",[t._v("全局自定义指令")]),t._v(" "),s("div",{pre:!0,attrs:{class:"saber-highlight","data-lang":"js"}},[s("pre",{pre:!0,attrs:{class:"saber-highlight-code language-js"}},[s("code",{pre:!0,attrs:{class:"language-js"}},[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注册一个全局自定义指令 `v-focus`")]),t._v("\nVue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("directive")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'focus'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当被绑定的元素插入到 DOM 中时……")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("inserted")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("el")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 聚焦元素")]),t._v("\n    el"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("focus")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])])]),s("p",[t._v("注册局部指令，组件中也接受一个 directives 的选项")]),t._v(" "),s("div",{pre:!0,attrs:{class:"saber-highlight","data-lang":"js"}},[s("pre",{pre:!0,attrs:{class:"saber-highlight-code language-js"}},[s("code",{pre:!0,attrs:{class:"language-js"}},[t._v("directives"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  focus"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指令的定义")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("inserted")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("el")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      el"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("focus")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])])]),s("p",[t._v("然后你可以在模板中任何元素上使用新的 v-focus 属性，如下")]),t._v(" "),s("div",{pre:!0,attrs:{class:"saber-highlight","data-lang":"html"}},[s("pre",{pre:!0,attrs:{class:"saber-highlight-code language-html"}},[s("code",{pre:!0,attrs:{class:"language-html"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-focus")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" // 注意指令前面加上v-")])])]),s("h2",{attrs:{id:"钩子函数"}},[t._v("钩子函数")]),t._v(" "),s("p",[t._v("一个指令定义对象可以提供如下几个钩子函数 (均为可选)：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("bind：只调用一次，指令第一次绑定到元素时调用。在这里可以进行一次性的初始化设置。")])]),t._v(" "),s("li",[s("p",[t._v("inserted：被绑定元素插入父节点时调用 (仅保证父节点存在，但不一定已被插入文档中)。")])]),t._v(" "),s("li",[s("p",[t._v("update：所在组件的 VNode 更新时调用，但是可能发生在其子 VNode 更新之前。指令的值可能发生了改变，也可能没有。但是你可以通过比较更新前后的值来忽略不必要的模板更新 (详细的钩子函数参数见下)。")])]),t._v(" "),s("li",[s("p",[t._v("componentUpdated：指令所在组件的 VNode 及其子 VNode 全部更新后调用。")])]),t._v(" "),s("li",[s("p",[t._v("unbind：只调用一次，指令与元素解绑时调用。")])])]),t._v(" "),s("h2",{attrs:{id:"钩子函数参数"}},[t._v("钩子函数参数")]),t._v(" "),s("p",[t._v("指令钩子函数会被传入以下参数：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("el：指令所绑定的元素，可以用来直接操作 DOM 。")])]),t._v(" "),s("li",[s("p",[t._v("binding：一个对象，包含以下属性：")]),t._v(" "),s("ul",[s("li",[t._v("name：指令名，不包括 v- 前缀。")]),t._v(" "),s("li",[t._v('value：指令的绑定值，例如：v-my-directive="1 + 1" 中，绑定值为 2。')]),t._v(" "),s("li",[t._v("oldValue：指令绑定的前一个值，仅在 update 和 componentUpdated 钩子中可用。无论值是否改变都可用。")]),t._v(" "),s("li",[t._v('expression：字符串形式的指令表达式。例如 v-my-directive="1 + 1" 中，表达式为 "1 + 1"。')]),t._v(" "),s("li",[t._v('arg：传给指令的参数，可选。例如 v-my-directive:foo 中，参数为 "foo"。')]),t._v(" "),s("li",[t._v("modifiers：一个包含修饰符的对象。例如：v-my-directive.foo.bar 中，修饰符对象为 { foo: true, bar: true }。")])])]),t._v(" "),s("li",[s("p",[t._v("vnode：Vue 编译生成的虚拟节点。移步 VNode API 来了解更多详情。")])]),t._v(" "),s("li",[s("p",[t._v("oldVnode：上一个虚拟节点，仅在 update 和 componentUpdated 钩子中可用。")])])])])}),[],!1,null,null,null);"function"==typeof e&&e(p);a.default=p.exports}}]);